{% extends 'OroUIBundle:actions:update.html.twig' %}
{% oro_title_set({params : {"%entity.subject%": entity.subject, "%entityName%": 'nb.wu.entity_label'|trans }}) %}
{% set entityId = entity.id ? entity.id : false %}

{% block navButtons %}
    {% set html = UI.saveAndCloseButton() %}
    {% if resource_granted('nb_workunit_update') %}
        {% set html = html ~ UI.saveAndStayButton() %}
    {% endif %}
    {{ UI.dropdownSaveButton({'html': html}) }}
    {{ UI.cancelButton(path('nb_workunit_index')) }}
{% endblock navButtons %}

{% block pageHeader %}
        {% set title = 'oro.ui.create_entity'|trans({'%entityName%': 'nb.wu.entity_label'|trans}) %}
        {% include 'OroUIBundle::page_title_block.html.twig' with { title: title } %}
{% endblock pageHeader %}

{% block content_data %}
    {% set id = 'workunit-form' %}

    {% set dataBlocks = [{
        'title': 'General Information'|trans,
        'class': 'active',
        'subblocks': [
            {
                'title': '',
                'data': [
                    form_row(form.startDate),
                    form_row(form.endDate),
                    form_row(form.worktype),
                    form_row(form.subject),
                    form.owner is defined ? form_row(form.owner) : '',
                    form_row(form.client)
                ]
            }
        ]
    }] %}

    {% set select_script = "
    <script type=\"text/javascript\">
        require(['jquery'],function($){
            $('#nb_workunit_relation_form_relation').change(function(e){
                var that = this;
                
                $('.select-target').fadeOut(400, function(){
                    var target = $(that).val();
                    if(target)
                        $('.select-' + target).fadeIn();
                });
            });
        });
    </script>
    " %}
    
    
        {% set dataBlocks = dataBlocks|merge([{
            'title': 'Additional'|trans,
            'subblocks': [{
                'title': '',
                'useSpan': false,
                'data' : [
                    '<span class="text-info">Эта информация не будет указываться в отчете</span>',
                    form_row(form.relation),
                    form_row(form.registration, { attr: { class: 'select-target hide select-registration'} }),
                    form_row(form.court, { attr: { class: 'select-target hide select-court'} }),
                     select_script 
                ]
            }]
        }] ) %}
    

    {% set data = {
        'formErrors': form_errors(form)? form_errors(form) : null,
        'dataBlocks': dataBlocks,
    } %}
    {{ parent() }}
{% endblock content_data %}
